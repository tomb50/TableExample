package TableExampleLang.structure;

/*Generated by MPS */

import jetbrains.mps.smodel.runtime.ConceptPresentationAspectBase;
import jetbrains.mps.smodel.runtime.ConceptPresentation;
import org.jetbrains.annotations.Nullable;
import org.jetbrains.mps.openapi.language.SAbstractConcept;
import jetbrains.mps.smodel.runtime.ConceptPresentationBuilder;

public class ConceptPresentationAspectImpl extends ConceptPresentationAspectBase {
  private ConceptPresentation props_Child1;
  private ConceptPresentation props_Child2;
  private ConceptPresentation props_ExternalItem;
  private ConceptPresentation props_Root;
  private ConceptPresentation props_UsesItem;

  @Override
  @Nullable
  public ConceptPresentation getDescriptor(SAbstractConcept c) {
    StructureAspectDescriptor structureDescriptor = (StructureAspectDescriptor) myLanguageRuntime.getAspect(jetbrains.mps.smodel.runtime.StructureAspectDescriptor.class);
    switch (structureDescriptor.internalIndex(c)) {
      case LanguageConceptSwitch.Child1:
        if (props_Child1 == null) {
          ConceptPresentationBuilder cpb = new ConceptPresentationBuilder();
          cpb.rawPresentation("Child1");
          props_Child1 = cpb.create();
        }
        return props_Child1;
      case LanguageConceptSwitch.Child2:
        if (props_Child2 == null) {
          ConceptPresentationBuilder cpb = new ConceptPresentationBuilder();
          cpb.rawPresentation("Child2");
          props_Child2 = cpb.create();
        }
        return props_Child2;
      case LanguageConceptSwitch.ExternalItem:
        if (props_ExternalItem == null) {
          ConceptPresentationBuilder cpb = new ConceptPresentationBuilder();
          cpb.presentationByName();
          props_ExternalItem = cpb.create();
        }
        return props_ExternalItem;
      case LanguageConceptSwitch.Root:
        if (props_Root == null) {
          ConceptPresentationBuilder cpb = new ConceptPresentationBuilder();
          cpb.rawPresentation("Root");
          props_Root = cpb.create();
        }
        return props_Root;
      case LanguageConceptSwitch.UsesItem:
        if (props_UsesItem == null) {
          ConceptPresentationBuilder cpb = new ConceptPresentationBuilder();
          cpb.presentationByReference(0xc138eb89f4c94197L, 0x9e50c9be86419d33L, 0x169a53a412f741acL, 0x169a53a412f741afL, "item", "", "");
          props_UsesItem = cpb.create();
        }
        return props_UsesItem;
    }
    return null;
  }
}
